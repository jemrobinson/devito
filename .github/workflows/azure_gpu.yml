name: Workflow to Create an Azure VM.

on: push

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions

# Set up a service principal using
#
# az login --tenant gerardjgormangmail.onmicrosoft.com
# rg=$(az group create --location uksouth --name GpuCI --query id | xargs)
# az ad sp create-for-rbac --name "http://GpuCI" --role contributor --scopes $rg --sdk-auth
#
# This will output some JSON which you should add to your GitHub repository as a secret called "AZURE_CREDENTIALS"
# 2. Change these variables for your configuration:
env:
  AZURE_RESOURCE_GROUP: GpuCI   # set this to your Azure Resource group's name

jobs:
  build-and-deploy-to-dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

   # Authentication
    - uses: azure/login@v1
      with:
        azcliversion: latest
        creds: ${{ secrets.AZURE_CREDENTIALS  }}

    # Provision a new VM
    - name: Azure CLI script to create a new VM
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az account show
          az vm delete --name GpuVM --resource-group GpuCI --yes
          az vm create --name GpuVM --resource-group GpuCI --image UbuntuLTS --size Standard_DS2_v2 --admin-username gpuciadmin
          az vm run-command invoke --name GpuVM --resource-group GpuCI --command-id RunShellScript --scripts 'echo $1 $2' --parameters hello world
          az vm delete --name GpuVM --resource-group GpuCI

    # az vm create --name GpuVM --resource-group GpuCI --image UbuntuLTS --size NC6_Promo --admin-username gpuciadmin --ephemeral-os-disk true

    # - uses: azure/webapps-container-deploy@v1
    #   with:
    #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
    #     images: '${{ env.CONTAINER_REGISTRY }}/app:latest'